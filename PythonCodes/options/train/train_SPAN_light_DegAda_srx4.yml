# general settings
name: train_SPANx4_1000k_B6G1
model_type: DASRModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRNetModel ----------------- #
gt_usm: True  # USM the ground-truth

degree_list: ['weak_degrade_one_stage', 'standard_degrade_one_stage', 'severe_degrade_two_stage']
degree_prob: [0.3, 0.3, 0.4]

# the degradation process of weak_degrade_one_stage
resize_prob_weak1: [0.1, 0.2, 0.7]  # up, down, keep
resize_range_weak1: [0.85, 1.2]
gaussian_noise_prob_weak1: 0.5
noise_range_weak1: [1, 10]
poisson_scale_range_weak1: [0.05, 0.5]
gray_noise_prob_weak1: 0.4
jpeg_range_weak1: [90, 95]

# the degradation process of standard_degrade_one_stage
resize_prob_standard1: [0.3, 0.4, 0.3]  # up, down, keep
resize_range_standard1: [0.5, 1.2]
gaussian_noise_prob_standard1: 0.5
noise_range_standard1: [1, 20]
poisson_scale_range_standard1: [0.05, 1.5]
gray_noise_prob_standard1: 0.4
jpeg_range_standard1: [50, 95]

# the first degradation process of severe_degrade_two_stage
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.15, 1.5]
gaussian_noise_prob: 0.5
noise_range: [1, 30]
poisson_scale_range: [0.05, 3]
gray_noise_prob: 0.4
jpeg_range: [30, 95]

# the second degradation process of severe_degrade_two_stage
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0.5
noise_range2: [1, 25]
poisson_scale_range2: [0.05, 2.5]
gray_noise_prob2: 0.4
jpeg_range2: [30, 95]

gt_size: 256
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: DF2K+OST
    type: DASRDataset
    dataroot_gt: ../datasets/DF2K
    meta_info: ../datasets/DF2K/meta_info/meta_info_DF2Kmultiscale+OST_sub.txt
    io_backend:
      type: disk

    blur_kernel_size_weak1: 21
    blur_kernel_size_minimum_weak1: 7
    kernel_list_weak1: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
    kernel_prob_weak1: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
    sinc_prob_weak1: 0
    blur_sigma_weak1: [ 0.2, 0.8 ]
    betag_range_weak1: [ 0.5, 4 ]
    betap_range_weak1: [ 1, 2 ]

    blur_kernel_size_standard1: 21
    blur_kernel_size_minimum_standard1: 7
    kernel_list_standard1: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
    kernel_prob_standard1: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
    sinc_prob_standard1: 0
    blur_sigma_standard1: [ 0.2, 1.5 ]
    betag_range_standard1: [ 0.5, 4 ]
    betap_range_standard1: [ 1, 2 ]

    blur_kernel_size: 21
    blur_kernel_size_minimum: 7
    kernel_list: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
    kernel_prob: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
    sinc_prob: 0
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    blur_kernel_size2_minimum: 7
    kernel_list2: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
    kernel_prob2: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
    sinc_prob2: 0
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 256
    use_hflip: True
    use_rot: False


    # data loader
    use_shuffle: true
    num_worker_per_gpu: 5
    batch_size_per_gpu: 10
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val_1:
    name: RealSR-Nikon
    type: PairedImageDataset
    dataroot_gt: ../datasets/RealSR(V3)/Nikon/Test/4/HR
    dataroot_lq: ../datasets/RealSR(V3)/Nikon/Test/4/LR
    filename_tmpl: '{}_x4'
    io_backend:
      type: disk

# network structures
network_g:
  type: SPAN
  num_in_ch: 3
  num_out_ch: 3
  feature_channels: 48
#  upscale: 4
#  bias: True
#  img_range: 255.
#  rgb_mean: (0.4488, 0.4371, 0.4040)

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 5e3
  save_img: False

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
      better: higher
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
      better: higher
    lpips:
      type: calculate_lpips
      crop_border: 4
      test_y_channel: true
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
